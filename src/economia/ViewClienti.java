/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package economia;

import java.awt.Color;
import java.util.HashMap;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import Jama.*;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.HashSet;
import java.util.Set;


/**
 *
 * @author giuli
 */
public class ViewClienti extends javax.swing.JFrame {

    Home home;
    HashMap<String, Double> valori;
    double Matrix[][];
    Connection conn;
    PreparedStatement ps;
    ResultSet rs;
    Set<Computer> comp;
    
    public ViewClienti(Home home) 
    {
        Matrix = new double[5][5];
        valori = new HashMap<>();
        valori.put("Decisamente più importante", 9d);
        valori.put("Molto più importante", 7d);
        valori.put("Più Importante", 5d);
        valori.put("Poco più importante", 3d);
        valori.put("Uguale", 1d);
        valori.put("Poco meno importante", 1/3d);
        valori.put("Meno importante", 1/5d);
        valori.put("Molto meno importante", 1/7d);
        valori.put("Non importante", 1/9d);
        this.home = home;
        initComponents();
        Schermata1.setVisible(true);
        comp = new HashSet<>();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Schermata1 = new javax.swing.JPanel();
        buttonBackC = new javax.swing.JButton();
        comboPrezzo_Estetica = new javax.swing.JComboBox<>();
        comboPrezzo_PrestPC = new javax.swing.JComboBox<>();
        comboPrezzo_Comfort = new javax.swing.JComboBox<>();
        comboEstetica_PrestPC = new javax.swing.JComboBox<>();
        comboPrezzo_Peso = new javax.swing.JComboBox<>();
        comboPrestPC_Peso = new javax.swing.JComboBox<>();
        comboEstetica_Peso = new javax.swing.JComboBox<>();
        comboComfort_Peso = new javax.swing.JComboBox<>();
        comboEstetica_Comfort = new javax.swing.JComboBox<>();
        comboPrestPC_Comfort = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        buttonOkC = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        Sfondo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(625, 626));
        setMinimumSize(new java.awt.Dimension(625, 626));
        setPreferredSize(new java.awt.Dimension(625, 626));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Schermata1.setOpaque(false);
        Schermata1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        buttonBackC.setBackground(new java.awt.Color(248, 223, 174));
        buttonBackC.setFont(new java.awt.Font("Dubai Medium", 1, 12)); // NOI18N
        buttonBackC.setText("Back");
        buttonBackC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonBackCActionPerformed(evt);
            }
        });
        Schermata1.add(buttonBackC, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 550, 80, 30));

        comboPrezzo_Estetica.setBackground(new java.awt.Color(248, 223, 174));
        comboPrezzo_Estetica.setFont(new java.awt.Font("Comic Sans MS", 0, 13)); // NOI18N
        comboPrezzo_Estetica.setForeground(new java.awt.Color(51, 51, 51));
        comboPrezzo_Estetica.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Scegli...", "Decisamente più importante", "Molto più importante", "Più Importante", "Poco più importante", "Uguale", "Poco meno importante", "Meno importante", "Molto meno importante", "Non importante" }));
        Schermata1.add(comboPrezzo_Estetica, new org.netbeans.lib.awtextra.AbsoluteConstraints(185, 120, 190, 30));

        comboPrezzo_PrestPC.setBackground(new java.awt.Color(248, 223, 174));
        comboPrezzo_PrestPC.setFont(new java.awt.Font("Comic Sans MS", 0, 13)); // NOI18N
        comboPrezzo_PrestPC.setForeground(new java.awt.Color(51, 51, 51));
        comboPrezzo_PrestPC.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Scegli...", "Decisamente più importante", "Molto più importante", "Più Importante", "Poco più importante", "Uguale", "Poco meno importante", "Meno importante", "Molto meno importante", "Non importante" }));
        Schermata1.add(comboPrezzo_PrestPC, new org.netbeans.lib.awtextra.AbsoluteConstraints(185, 160, 190, 30));

        comboPrezzo_Comfort.setBackground(new java.awt.Color(248, 223, 174));
        comboPrezzo_Comfort.setFont(new java.awt.Font("Comic Sans MS", 0, 13)); // NOI18N
        comboPrezzo_Comfort.setForeground(new java.awt.Color(51, 51, 51));
        comboPrezzo_Comfort.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Scegli...", "Decisamente più importante", "Molto più importante", "Più Importante", "Poco più importante", "Uguale", "Poco meno importante", "Meno importante", "Molto meno importante", "Non importante" }));
        Schermata1.add(comboPrezzo_Comfort, new org.netbeans.lib.awtextra.AbsoluteConstraints(185, 200, 190, 30));

        comboEstetica_PrestPC.setBackground(new java.awt.Color(248, 223, 174));
        comboEstetica_PrestPC.setFont(new java.awt.Font("Comic Sans MS", 0, 13)); // NOI18N
        comboEstetica_PrestPC.setForeground(new java.awt.Color(51, 51, 51));
        comboEstetica_PrestPC.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Scegli...", "Decisamente più importante", "Molto più importante", "Più Importante", "Poco più importante", "Uguale", "Poco meno importante", "Meno importante", "Molto meno importante", "Non importante" }));
        Schermata1.add(comboEstetica_PrestPC, new org.netbeans.lib.awtextra.AbsoluteConstraints(185, 280, 190, 30));

        comboPrezzo_Peso.setBackground(new java.awt.Color(248, 223, 174));
        comboPrezzo_Peso.setFont(new java.awt.Font("Comic Sans MS", 0, 13)); // NOI18N
        comboPrezzo_Peso.setForeground(new java.awt.Color(51, 51, 51));
        comboPrezzo_Peso.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Scegli...", "Decisamente più importante", "Molto più importante", "Più Importante", "Poco più importante", "Uguale", "Poco meno importante", "Meno importante", "Molto meno importante", "Non importante" }));
        Schermata1.add(comboPrezzo_Peso, new org.netbeans.lib.awtextra.AbsoluteConstraints(185, 80, 190, 30));

        comboPrestPC_Peso.setBackground(new java.awt.Color(248, 223, 174));
        comboPrestPC_Peso.setFont(new java.awt.Font("Comic Sans MS", 0, 13)); // NOI18N
        comboPrestPC_Peso.setForeground(new java.awt.Color(51, 51, 51));
        comboPrestPC_Peso.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Scegli...", "Decisamente più importante", "Molto più importante", "Più Importante", "Poco più importante", "Uguale", "Poco meno importante", "Meno importante", "Molto meno importante", "Non importante" }));
        Schermata1.add(comboPrestPC_Peso, new org.netbeans.lib.awtextra.AbsoluteConstraints(185, 360, 190, 30));

        comboEstetica_Peso.setBackground(new java.awt.Color(248, 223, 174));
        comboEstetica_Peso.setFont(new java.awt.Font("Comic Sans MS", 0, 13)); // NOI18N
        comboEstetica_Peso.setForeground(new java.awt.Color(51, 51, 51));
        comboEstetica_Peso.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Scegli...", "Decisamente più importante", "Molto più importante", "Più Importante", "Poco più importante", "Uguale", "Poco meno importante", "Meno importante", "Molto meno importante", "Non importante" }));
        Schermata1.add(comboEstetica_Peso, new org.netbeans.lib.awtextra.AbsoluteConstraints(185, 240, 190, 30));

        comboComfort_Peso.setBackground(new java.awt.Color(248, 223, 174));
        comboComfort_Peso.setFont(new java.awt.Font("Comic Sans MS", 0, 13)); // NOI18N
        comboComfort_Peso.setForeground(new java.awt.Color(51, 51, 51));
        comboComfort_Peso.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Scegli...", "Decisamente più importante", "Molto più importante", "Più Importante", "Poco più importante", "Uguale", "Poco meno importante", "Meno importante", "Molto meno importante", "Non importante" }));
        Schermata1.add(comboComfort_Peso, new org.netbeans.lib.awtextra.AbsoluteConstraints(185, 440, 190, 30));

        comboEstetica_Comfort.setBackground(new java.awt.Color(248, 223, 174));
        comboEstetica_Comfort.setFont(new java.awt.Font("Comic Sans MS", 0, 13)); // NOI18N
        comboEstetica_Comfort.setForeground(new java.awt.Color(51, 51, 51));
        comboEstetica_Comfort.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Scegli...", "Decisamente più importante", "Molto più importante", "Più Importante", "Poco più importante", "Uguale", "Poco meno importante", "Meno importante", "Molto meno importante", "Non importante" }));
        Schermata1.add(comboEstetica_Comfort, new org.netbeans.lib.awtextra.AbsoluteConstraints(185, 320, 190, 30));

        comboPrestPC_Comfort.setBackground(new java.awt.Color(248, 223, 174));
        comboPrestPC_Comfort.setFont(new java.awt.Font("Comic Sans MS", 0, 13)); // NOI18N
        comboPrestPC_Comfort.setForeground(new java.awt.Color(51, 51, 51));
        comboPrestPC_Comfort.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Scegli...", "Decisamente più importante", "Molto più importante", "Più Importante", "Poco più importante", "Uguale", "Poco meno importante", "Meno importante", "Molto meno importante", "Non importante" }));
        Schermata1.add(comboPrestPC_Comfort, new org.netbeans.lib.awtextra.AbsoluteConstraints(185, 400, 190, 30));

        jLabel1.setFont(new java.awt.Font("Dubai Medium", 1, 16)); // NOI18N
        jLabel1.setText("Il prezzo è");
        Schermata1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 120, 140, 30));

        jLabel2.setFont(new java.awt.Font("Dubai Medium", 1, 16)); // NOI18N
        jLabel2.setText("Il prezzo è");
        Schermata1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 160, 220, 30));

        jLabel3.setFont(new java.awt.Font("Dubai Medium", 1, 16)); // NOI18N
        jLabel3.setText("Il prezzo è");
        Schermata1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 200, 200, 30));

        jLabel4.setFont(new java.awt.Font("Dubai Medium", 1, 16)); // NOI18N
        jLabel4.setText("L'estetica è");
        Schermata1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 240, 200, 30));

        jLabel5.setFont(new java.awt.Font("Dubai Medium", 1, 16)); // NOI18N
        jLabel5.setText("rispetto al peso");
        Schermata1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 80, 160, 30));

        jLabel6.setFont(new java.awt.Font("Forte", 2, 28)); // NOI18N
        jLabel6.setText("IMPOSTA LE TUE PREFERENZE");
        Schermata1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 10, 420, -1));

        buttonOkC.setBackground(new java.awt.Color(248, 223, 174));
        buttonOkC.setFont(new java.awt.Font("Dubai Medium", 1, 14)); // NOI18N
        buttonOkC.setText("OK");
        buttonOkC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonOkCActionPerformed(evt);
            }
        });
        Schermata1.add(buttonOkC, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 500, 80, 40));

        jLabel7.setFont(new java.awt.Font("Dubai Medium", 1, 16)); // NOI18N
        jLabel7.setText("rispetto all' estetica");
        Schermata1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 120, 220, 30));

        jLabel8.setFont(new java.awt.Font("Dubai Medium", 1, 16)); // NOI18N
        jLabel8.setText("rispetto alla prestazione del PC");
        Schermata1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 160, 270, 30));

        jLabel9.setFont(new java.awt.Font("Dubai Medium", 1, 16)); // NOI18N
        jLabel9.setText("rispetto al comfort");
        Schermata1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 200, 250, 30));

        jLabel10.setFont(new java.awt.Font("Dubai Medium", 1, 16)); // NOI18N
        jLabel10.setText("rispetto al peso");
        Schermata1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 240, 240, 30));

        jLabel11.setFont(new java.awt.Font("Dubai Medium", 1, 16)); // NOI18N
        jLabel11.setText("Il prezzo è");
        Schermata1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 80, 140, 30));

        jLabel12.setFont(new java.awt.Font("Dubai Medium", 1, 16)); // NOI18N
        jLabel12.setText("L'estetica è");
        Schermata1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 320, 150, 30));

        jLabel14.setFont(new java.awt.Font("Dubai Medium", 1, 16)); // NOI18N
        jLabel14.setText("L'estetica è");
        Schermata1.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 280, 160, 30));

        jLabel15.setFont(new java.awt.Font("Dubai Medium", 1, 16)); // NOI18N
        jLabel15.setText("rispetto al comfort");
        Schermata1.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 320, 240, 30));

        jLabel16.setFont(new java.awt.Font("Dubai Medium", 1, 16)); // NOI18N
        jLabel16.setText("rispetto alla prestazione del PC");
        Schermata1.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 280, 270, 30));

        jLabel13.setFont(new java.awt.Font("Dubai Medium", 1, 16)); // NOI18N
        jLabel13.setText("La prestazione del PC è");
        Schermata1.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 400, 190, 30));

        jLabel17.setFont(new java.awt.Font("Dubai Medium", 1, 16)); // NOI18N
        jLabel17.setText("La prestazione del PC è");
        Schermata1.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 360, 180, 30));

        jLabel18.setFont(new java.awt.Font("Dubai Medium", 1, 16)); // NOI18N
        jLabel18.setText("Il comfort è");
        Schermata1.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 440, 170, 30));

        jLabel19.setFont(new java.awt.Font("Dubai Medium", 1, 16)); // NOI18N
        jLabel19.setText("rispetto  al peso");
        Schermata1.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 360, 170, 30));

        jLabel20.setFont(new java.awt.Font("Dubai Medium", 1, 16)); // NOI18N
        jLabel20.setText("rispetto al peso");
        Schermata1.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 440, 170, 30));

        jLabel21.setFont(new java.awt.Font("Dubai Medium", 1, 16)); // NOI18N
        jLabel21.setText("rispetto al comfort");
        Schermata1.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 400, 170, 30));

        getContentPane().add(Schermata1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 630, 620));

        Sfondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Immagini/fundo-textura-da-aguarela_1048-2727.jpg"))); // NOI18N
        getContentPane().add(Sfondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 625, 626));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonBackCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBackCActionPerformed
        this.setVisible(false);
        home.setVisible(true);
    }//GEN-LAST:event_buttonBackCActionPerformed

    private void buttonOkCActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_buttonOkCActionPerformed
    {//GEN-HEADEREND:event_buttonOkCActionPerformed
        
        
        if( comboComfort_Peso.getSelectedItem().toString().equals("Scegli...") || comboPrestPC_Peso.getSelectedItem().toString().equals("Scegli...") || 
                comboPrestPC_Comfort.getSelectedItem().toString().equals("Scegli...") || comboEstetica_Comfort.getSelectedItem().toString().equals("Scegli...") || 
                comboEstetica_Peso.getSelectedItem().toString().equals("Scegli...") || 
                comboEstetica_PrestPC.getSelectedItem().toString().equals("Scegli...") || comboPrezzo_Comfort.getSelectedItem().toString().equals("Scegli...") || 
                comboPrezzo_Peso.getSelectedItem().toString().equals("Scegli...") || comboPrezzo_PrestPC.getSelectedItem().toString().equals("Scegli...") || 
                comboPrezzo_Estetica.getSelectedItem().toString().equals("Scegli...") )
        {
            JOptionPane.showMessageDialog(null, "E' necessario riempire tutti i campi.", "[ATTENZIONE]", JOptionPane.ERROR_MESSAGE);
        }
        else
        {
            for(int i=0; i<5;i++)
            {
                Matrix[i][i] = 1;
            }
            
            Matrix[4][0]= valori.get(comboComfort_Peso.getSelectedItem().toString());
            Matrix[0][4] = 1/Matrix[4][0];
            Matrix[3][4] = valori.get(comboEstetica_Comfort.getSelectedItem().toString());
            Matrix[4][3] = 1/Matrix[3][4];
            Matrix[3][0] = valori.get(comboEstetica_Peso.getSelectedItem().toString());
            Matrix[0][3] = 1/Matrix[3][0];
            Matrix[3][2] = valori.get(comboEstetica_PrestPC.getSelectedItem().toString());
            Matrix[2][3] = 1/Matrix[3][2];
            Matrix[2][4] = valori.get(comboPrestPC_Comfort.getSelectedItem().toString());
            Matrix[4][2] = 1/Matrix[2][4];
            Matrix[2][0] = valori.get(comboPrestPC_Peso.getSelectedItem().toString());
            Matrix[0][2] = 1/Matrix[2][0];
            Matrix[1][4] = valori.get(comboPrezzo_Comfort.getSelectedItem().toString());
            Matrix[4][1] = 1/Matrix[1][4];
            Matrix[1][3] = valori.get(comboPrezzo_Estetica.getSelectedItem().toString());
            Matrix[3][1] = 1/Matrix[1][3];
            Matrix[1][0] = valori.get(comboPrezzo_Peso.getSelectedItem().toString());
            Matrix[0][1] = 1/Matrix[1][0];
            Matrix[1][2] = valori.get(comboPrezzo_PrestPC.getSelectedItem().toString());
            Matrix[2][1] = 1/Matrix[1][2];
            
            Matrix m = new Matrix(Matrix);
            m.print(5,5);
            EigenvalueDecomposition eigen = m.eig();
            double autovalori [] = eigen.getRealEigenvalues();
            double maxAutovalore = autovalori[0];
            for(int i=0; i<autovalori.length;i++)
            {
                if(maxAutovalore < autovalori[i])
                    maxAutovalore=autovalori[i];
            }
            System.out.println("Autovalore MAX: " + maxAutovalore);
            double consistentIndex = (maxAutovalore - 5.0)/4.0;
            double consistentRatio = consistentIndex/1.11; //1.11 perchè la matrice è una 5x5 ved tab. 2.2 pag 54 sulle slide appunti AHP
            System.out.println("ConsistentRatio: " + consistentRatio);
            if(consistentRatio < 0.2)
            {
                Schermata1.setVisible(true);
            }
            else
            {
                JOptionPane.showMessageDialog(this, "La matrice NON è consistente. Reinserire le preferenze.", "[ERROR]", JOptionPane.ERROR_MESSAGE);
            }
            //AUTOVETTORE
            double autoVettore[] = new double[5];
            double produttoria;
            for(int i=0; i<Matrix.length; i++)
            {
                produttoria = 1;
                for(int j=0; j<Matrix.length; j++)
                    produttoria *= Matrix[i][j];
                
                autoVettore[i] = Math.pow(produttoria,0.2);
            }
            
            System.out.println("Autovettore: ");
            for (int i = 0; i < Matrix.length; i++)
            {
                System.out.print(autoVettore[i] +" ; ");
            }
            
            double sumAutovector = 0;
            for (int i = 0; i < Matrix.length; i++)
            {
                sumAutovector += autoVettore[i];
            }
            
            double[] pesiDouble = new double[5];
            double percentuali[] = new double[5];
            for (int i = 0; i < Matrix.length; i++)
            {
                pesiDouble[i] = autoVettore[i] / sumAutovector;
                System.out.println("Pesi : "+pesiDouble[i]);
                percentuali[i] =  round(pesiDouble[i], 2)*100;
            }
            
            System.out.println("PERCENTUALI:\n");
            
            for (int i = 0; i < Matrix.length; i++)
            {
                System.out.println(percentuali[i] + "%, ");
            }
        
        try{
                conn = Database.getConnection();
                String query = "SELECT * FROM COMPUTER";
                ps = conn.prepareStatement(query);
                rs = ps.executeQuery();
                           
                while(rs.next())
                {
                    comp.add(new Computer(rs.getString(1),rs.getFloat(2),rs.getFloat(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8),rs.getString(9),rs.getInt(10),rs.getInt(11)));
                }
                ps.clearParameters();
                
                for(Computer x : comp)
                {   
                    String query2 = "SELECT * FROM COMPUTER_FUZZY WHERE ID = ?";
                    ps = conn.prepareStatement(query2);
                    ps.setInt(1,x.getId());
                    rs = ps.executeQuery();
                    double valutazione;
                    if(rs.next())
                    {
                      valutazione = rs.getFloat(2)*pesiDouble[0] + rs.getFloat(3)*pesiDouble[1] + rs.getFloat(4)*pesiDouble[2] + rs.getFloat(12) * pesiDouble[3] + rs.getFloat(8)*pesiDouble[4];
                      x.setValut(valutazione);
                    }
                    
                }
        }
        catch(SQLException e)
        {
            System.out.println("Errore ricerca");
        }
        
        
        Computer primo = null;
        Computer secondo = null;
        double max1 = 0;
        double max2 = 0;
        
        for(Computer x : comp)
        {
            if(x.getValut()> max1)
            {
                max1 = x.getValut();
                primo = x;
            }
            
        }
        
        for(Computer x : comp)
        {
            if(x.getValut() > max2 && x!=primo)
            {
                 max2 = x.getValut();
                 secondo = x;
            }
        }
        
        viewValutazione viewVal = new viewValutazione(primo,secondo);
        //Setto tutti gli elementi che si trovano in viewVal con le caratteristiche dei computer che rispecchiano le preferenze del cliente
        viewVal.setVisible(true);
        this.dispose();
        }
        
    }//GEN-LAST:event_buttonOkCActionPerformed
    
    public static double round(double value, int places) 
    {
        if (places < 0) 
            throw new IllegalArgumentException();

        long factor = (long) Math.pow(10, places);
        value = value * factor;
        long tmp = Math.round(value);
        return (double) tmp / factor;
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Schermata1;
    private javax.swing.JLabel Sfondo;
    private javax.swing.JButton buttonBackC;
    private javax.swing.JButton buttonOkC;
    private javax.swing.JComboBox<String> comboComfort_Peso;
    private javax.swing.JComboBox<String> comboEstetica_Comfort;
    private javax.swing.JComboBox<String> comboEstetica_Peso;
    private javax.swing.JComboBox<String> comboEstetica_PrestPC;
    private javax.swing.JComboBox<String> comboPrestPC_Comfort;
    private javax.swing.JComboBox<String> comboPrestPC_Peso;
    private javax.swing.JComboBox<String> comboPrezzo_Comfort;
    private javax.swing.JComboBox<String> comboPrezzo_Estetica;
    private javax.swing.JComboBox<String> comboPrezzo_Peso;
    private javax.swing.JComboBox<String> comboPrezzo_PrestPC;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    // End of variables declaration//GEN-END:variables
}
